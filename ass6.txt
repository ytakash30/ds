//BullyAlgoExample

import java.io.*;
import java.util.Scanner;
// create class BullyAlgoExample to understand how bully algorithms works
class BullyAlgoExample{
// declare variables and arrays for process and their status
static int numberOfProcess;
static int priorities[] = new int[100];
static int status[] = new int[100];
static int cord;
// main() method start
public static void main(String args[])throws IOException // handle IOException
{
// get input from the user for the number of processes
System.out.println("Enter total number of processes:");
// create scanner class object to get input from user
Scanner sc = new Scanner(System.in);
numberOfProcess = sc.nextInt();
int i;
// use for loop to set priority and status of each process
for(i = 0; i<numberOfProcess; i++)
{
System.out.println("Status for process "+(i+1)+":");
status[i] = sc.nextInt();
System.out.println("Priority of process "+(i+1)+":");
priorities[i] = sc.nextInt();
}
System.out.println("Enter proces which will initiate election");
int ele = sc.nextInt();
sc.close();
// call electProcess() method
electProcess(ele);
System.out.println("After electing process the final coordinator is "+cord);
}
// create electProcess() method
static void electProcess(int ele)

{
ele = ele - 1;
cord = ele + 1;
for(int i = 0; i<numberOfProcess; i++)
{
if(priorities[ele]<priorities[i])
{
System.out.println("Election message is sent from "+(ele+1)+" to "+(i+1));
if(status[i]==1)
electProcess(i+1);
}
}
}
}


//RingAlgorithm

import java.util.Scanner;
public class RingAlgorithm {
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
System.out.print("Enter the number of processes: ");
int numProcesses = scanner.nextInt();
System.out.print("Enter the ID of this process (between 1 and " + numProcesses + "): ");
int thisProcessId = scanner.nextInt();
// Initialize the ring
RingProcess[] ring = new RingProcess[numProcesses];
for (int i = 0; i < numProcesses; i++) {
ring[i] = new RingProcess(i + 1);
}
// Set the next process in the ring for each process
for (int i = 0; i < numProcesses; i++) {
ring[i].setNextProcess(ring[(i + 1) % numProcesses]);
}
// Start the election
ring[thisProcessId - 1].startElection();
}
}
class RingProcess {
private int processId;
private RingProcess nextProcess;
private boolean isLeader;
public RingProcess(int processId) {
this.processId = processId;
this.isLeader = false;
}
public void setNextProcess(RingProcess nextProcess) {
this.nextProcess = nextProcess;
}
public void startElection() {
System.out.println("Process " + processId + " starts the election.");
if (isLeader) {
System.out.println("Process " + processId + " is already the leader.");
return;
}
RingProcess currentProcess = this;
while (true) {
if (currentProcess.nextProcess.processId == processId) {
currentProcess.isLeader = true;

System.out.println("Process " + processId + " is elected as the leader.");
break;
} else if (currentProcess.nextProcess.processId > processId) {
currentProcess = currentProcess.nextProcess;
} else {
System.out.println("Process " + processId + " passes the election message to Process " +
currentProcess.nextProcess.processId);
currentProcess = currentProcess.nextProcess;
}
}
}
}


//Commands

javac BullyAlgoExample.java
java BullyAlgoExample